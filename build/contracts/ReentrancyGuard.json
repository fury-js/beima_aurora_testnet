{
  "contractName": "ReentrancyGuard",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
<<<<<<< HEAD
        236
      ]
    },
    "id": 237,
=======
        1512
      ]
    },
    "id": 1513,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 198,
=======
        "id": 1474,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "97:23:2"
=======
        "src": "97:23:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 199,
          "nodeType": "StructuredDocumentation",
          "src": "122:750:2",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 236,
        "linearizedBaseContracts": [
          236
=======
          "id": 1475,
          "nodeType": "StructuredDocumentation",
          "src": "122:750:5",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 1512,
        "linearizedBaseContracts": [
          1512
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
<<<<<<< HEAD
            "id": 202,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1661:41:2",
=======
            "id": 1478,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1661:41:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1661:7:2",
=======
              "id": 1476,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1661:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
<<<<<<< HEAD
              "id": 201,
=======
              "id": 1477,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "1701:1:2",
=======
              "src": "1701:1:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
<<<<<<< HEAD
            "id": 205,
            "mutability": "constant",
            "name": "_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1708:37:2",
=======
            "id": 1481,
            "mutability": "constant",
            "name": "_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1708:37:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 203,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:2",
=======
              "id": 1479,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
<<<<<<< HEAD
              "id": 204,
=======
              "id": 1480,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "1744:1:2",
=======
              "src": "1744:1:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 207,
            "mutability": "mutable",
            "name": "_status",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1752:23:2",
=======
            "id": 1483,
            "mutability": "mutable",
            "name": "_status",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1752:23:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:2",
=======
              "id": 1482,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "1796:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 212,
=======
              "id": 1490,
              "nodeType": "Block",
              "src": "1796:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 1488,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 210,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "1806:7:2",
=======
                      "id": 1486,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "1806:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 211,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "1816:12:2",
=======
                      "id": 1487,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "1816:12:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1806:22:2",
=======
                    "src": "1806:22:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:22:2"
                }
              ]
            },
            "id": 215,
=======
                  "id": 1489,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:22:5"
                }
              ]
            },
            "id": 1491,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:2:2"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:2"
            },
            "scope": 236,
            "src": "1782:53:2",
=======
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:2:5"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:5"
            },
            "scope": 1512,
            "src": "1782:53:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 234,
              "nodeType": "Block",
              "src": "2236:421:2",
=======
              "id": 1510,
              "nodeType": "Block",
              "src": "2236:421:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 221,
=======
                        "id": 1497,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 219,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "2325:7:2",
=======
                          "id": 1495,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1483,
                          "src": "2325:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 220,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2336:8:2",
=======
                          "id": 1496,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "2336:8:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2325:19:2",
=======
                        "src": "2325:19:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
<<<<<<< HEAD
                        "id": 222,
=======
                        "id": 1498,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2346:33:2",
=======
                        "src": "2346:33:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 218,
=======
                      "id": 1494,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2317:7:2",
=======
                      "src": "2317:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 223,
=======
                    "id": 1499,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2317:63:2",
=======
                    "src": "2317:63:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:63:2"
                },
                {
                  "expression": {
                    "id": 227,
=======
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:63:5"
                },
                {
                  "expression": {
                    "id": 1503,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 225,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2455:7:2",
=======
                      "id": 1501,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "2455:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 226,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2465:8:2",
=======
                      "id": 1502,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1481,
                      "src": "2465:8:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2455:18:2",
=======
                    "src": "2455:18:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:18:2"
                },
                {
                  "id": 229,
                  "nodeType": "PlaceholderStatement",
                  "src": "2484:1:2"
                },
                {
                  "expression": {
                    "id": 232,
=======
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:18:5"
                },
                {
                  "id": 1505,
                  "nodeType": "PlaceholderStatement",
                  "src": "2484:1:5"
                },
                {
                  "expression": {
                    "id": 1508,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 230,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2628:7:2",
=======
                      "id": 1506,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "2628:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 231,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2638:12:2",
=======
                      "id": 1507,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "2638:12:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2628:22:2",
=======
                    "src": "2628:22:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:22:2"
=======
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:22:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 216,
              "nodeType": "StructuredDocumentation",
              "src": "1841:366:2",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 235,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:2"
            },
            "src": "2212:445:2",
=======
              "id": 1492,
              "nodeType": "StructuredDocumentation",
              "src": "1841:366:5",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 1511,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:5"
            },
            "src": "2212:445:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 237,
        "src": "873:1786:2"
      }
    ],
    "src": "97:2563:2"
=======
        "scope": 1513,
        "src": "873:1786:5"
      }
    ],
    "src": "97:2563:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
<<<<<<< HEAD
        236
      ]
    },
    "id": 237,
=======
        1512
      ]
    },
    "id": 1513,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 198,
=======
        "id": 1474,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "97:23:2"
=======
        "src": "97:23:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 199,
          "nodeType": "StructuredDocumentation",
          "src": "122:750:2",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 236,
        "linearizedBaseContracts": [
          236
=======
          "id": 1475,
          "nodeType": "StructuredDocumentation",
          "src": "122:750:5",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 1512,
        "linearizedBaseContracts": [
          1512
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
<<<<<<< HEAD
            "id": 202,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1661:41:2",
=======
            "id": 1478,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1661:41:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1661:7:2",
=======
              "id": 1476,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1661:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
<<<<<<< HEAD
              "id": 201,
=======
              "id": 1477,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "1701:1:2",
=======
              "src": "1701:1:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
<<<<<<< HEAD
            "id": 205,
            "mutability": "constant",
            "name": "_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1708:37:2",
=======
            "id": 1481,
            "mutability": "constant",
            "name": "_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1708:37:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 203,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:2",
=======
              "id": 1479,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
<<<<<<< HEAD
              "id": 204,
=======
              "id": 1480,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "1744:1:2",
=======
              "src": "1744:1:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 207,
            "mutability": "mutable",
            "name": "_status",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "1752:23:2",
=======
            "id": 1483,
            "mutability": "mutable",
            "name": "_status",
            "nodeType": "VariableDeclaration",
            "scope": 1512,
            "src": "1752:23:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:2",
=======
              "id": 1482,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "1796:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 212,
=======
              "id": 1490,
              "nodeType": "Block",
              "src": "1796:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 1488,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 210,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "1806:7:2",
=======
                      "id": 1486,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "1806:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 211,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "1816:12:2",
=======
                      "id": 1487,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "1816:12:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1806:22:2",
=======
                    "src": "1806:22:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:22:2"
                }
              ]
            },
            "id": 215,
=======
                  "id": 1489,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:22:5"
                }
              ]
            },
            "id": 1491,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:2:2"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:2"
            },
            "scope": 236,
            "src": "1782:53:2",
=======
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:2:5"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:5"
            },
            "scope": 1512,
            "src": "1782:53:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 234,
              "nodeType": "Block",
              "src": "2236:421:2",
=======
              "id": 1510,
              "nodeType": "Block",
              "src": "2236:421:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 221,
=======
                        "id": 1497,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 219,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "2325:7:2",
=======
                          "id": 1495,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1483,
                          "src": "2325:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 220,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2336:8:2",
=======
                          "id": 1496,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "2336:8:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2325:19:2",
=======
                        "src": "2325:19:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
<<<<<<< HEAD
                        "id": 222,
=======
                        "id": 1498,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2346:33:2",
=======
                        "src": "2346:33:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 218,
=======
                      "id": 1494,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2317:7:2",
=======
                      "src": "2317:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 223,
=======
                    "id": 1499,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2317:63:2",
=======
                    "src": "2317:63:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:63:2"
                },
                {
                  "expression": {
                    "id": 227,
=======
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:63:5"
                },
                {
                  "expression": {
                    "id": 1503,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 225,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2455:7:2",
=======
                      "id": 1501,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "2455:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 226,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "2465:8:2",
=======
                      "id": 1502,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1481,
                      "src": "2465:8:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2455:18:2",
=======
                    "src": "2455:18:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:18:2"
                },
                {
                  "id": 229,
                  "nodeType": "PlaceholderStatement",
                  "src": "2484:1:2"
                },
                {
                  "expression": {
                    "id": 232,
=======
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:18:5"
                },
                {
                  "id": 1505,
                  "nodeType": "PlaceholderStatement",
                  "src": "2484:1:5"
                },
                {
                  "expression": {
                    "id": 1508,
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 230,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "2628:7:2",
=======
                      "id": 1506,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "2628:7:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 231,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2638:12:2",
=======
                      "id": 1507,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "2638:12:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2628:22:2",
=======
                    "src": "2628:22:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:22:2"
=======
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:22:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 216,
              "nodeType": "StructuredDocumentation",
              "src": "1841:366:2",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 235,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:2"
            },
            "src": "2212:445:2",
=======
              "id": 1492,
              "nodeType": "StructuredDocumentation",
              "src": "1841:366:5",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 1511,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:5"
            },
            "src": "2212:445:5",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 237,
        "src": "873:1786:2"
      }
    ],
    "src": "97:2563:2"
=======
        "scope": 1513,
        "src": "873:1786:5"
      }
    ],
    "src": "97:2563:5"
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
<<<<<<< HEAD
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-18T06:52:21.312Z",
=======
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-01-31T15:59:40.850Z",
>>>>>>> 2e9713e0dc9f228167db15ea13b54ad52ce84f71
  "devdoc": {
    "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}